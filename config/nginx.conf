server {
    listen [::]:80 default_server;
    listen 80;

    # the domain name it will serve for
    server_name 127.0.0.1 localhost; # substitute your machine's IP address or FQDN and port

    proxy_intercept_errors off;
    gzip on;
    gzip_types text/css application/javascript application/json image/svg+xml;
    gzip_comp_level 9;
    etag on;

    charset     utf-8;

    # max upload size
    client_max_body_size 75M;   # adjust to taste

    #
    # Reverse proxy for orthanc web interface
    #
    location /pacs-admin/ {
        proxy_set_header Host                $host;
        proxy_set_header X-Real-IP           $remote_addr;
        proxy_set_header X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto   $scheme;

        expires          0;
        add_header       Cache-Control private;
        proxy_pass       http://orthanc:8042/;
    }

    #
    # Reverse Proxy for `orthanc` APIs (including DICOMWeb)
    #
    location /pacs/ {
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;

        expires           0;
        add_header        Cache-Control private;

        proxy_pass        http://orthanc:8042/;

        # By default, this endpoint is protected by CORS (cross-origin-resource-sharing)
        # You can add headers to allow other domains to request this resource.
        # See the "Updating CORS Settings" example below
    }

    # 
    # Single Page App
    #
     location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "no-store, no-cache, must-revalidate";
    }

    # location / {
        # if ($request_method = 'OPTIONS') {
        #     add_header 'Access-Control-Allow-Origin' '*';
        #     add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        #     #
        #     # Custom headers and headers various browsers *should* be OK with but aren't
        #     #
        #     add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        #     #
        #     # Tell client that this pre-flight info is valid for 20 days
        #     #
        #     add_header 'Access-Control-Allow-Headers' 'Authorization';
        #     add_header 'Access-Control-Allow-Credentials' true;
        #     add_header 'Access-Control-Max-Age' 1728000;
        #     add_header 'Content-Length' 0;
        #     return 204;
        # }
        # if ($request_method = 'POST') {
        #     add_header 'Access-Control-Allow-Origin' '*';
        #     add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        #     add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        #     add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
        # }
        # if ($request_method = 'GET') {
        #     add_header 'Access-Control-Allow-Origin' '*';
        #     add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        #     add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        #     add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
        #     add_header 'Access-Control-Allow-Headers' 'Authorization';
        #     add_header 'Access-Control-Allow-Credentials' true;
        # }


        # root   /usr/share/nginx/html;
        # index  index.html index.htm;
        # try_files $uri $uri/ /index.html;
        # add_header Cache-Control "no-store, no-cache, must-revalidate";

        # proxy_http_version 1.1;

        # proxy_set_header Host               $host;
        # proxy_set_header X-Real-IP          $remote_addr;
        # proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Proto  $scheme;

        # proxy_pass http://orthanc:8042;
    # }
}